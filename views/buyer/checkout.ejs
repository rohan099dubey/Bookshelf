<%- include('../partials/header') %>

<div class="container mx-auto px-4">
  <h1 class="text-3xl font-bold mb-6">Checkout</h1>
  
  <div class="flex flex-col lg:flex-row gap-6">
    <!-- Order Details -->
    <div class="lg:w-2/3">
      <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <h2 class="text-xl font-semibold mb-4">Order Items</h2>
        
        <div class="space-y-4">
          <% cart.items.forEach(item => { %>
            <div class="flex border-b pb-4">
              <img src="<%= item.book.coverImage %>" alt="<%= item.book.title %>" class="w-16 h-24 object-cover rounded-md mr-4">
              <div class="flex-grow">
                <h3 class="font-medium"><%= item.book.title %></h3>
                <p class="text-sm text-gray-600"><%= item.book.author %></p>
                <div class="flex justify-between mt-2">
                  <div class="text-sm">
                    <span>₹<%= item.price %> × <%= item.quantity %></span>
                  </div>
                  <div class="font-medium">₹<%= item.price * item.quantity %></div>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      </div>
      
      <!-- Shipping Information -->
      <div class="mt-6">
        <h3 class="text-lg font-semibold mb-4">Shipping Information</h3>
        
        <% if (defaultAddress) { %>
          <!-- Default Address Display -->
          <div class="border rounded-md p-4 bg-primary bg-opacity-5 border-primary mb-4">
            <div class="flex justify-between items-start">
              <div>
                <div class="font-medium"><%= defaultAddress.name %></div>
                <div class="text-gray-600 mt-1">
                  <%= defaultAddress.street %><br>
                  <%= defaultAddress.city %>, <%= defaultAddress.state %> <%= defaultAddress.zipCode %><br>
                  Phone: <%= defaultAddress.phone %>
                </div>
              </div>
              <div class="bg-primary text-dark text-xs px-2 py-1 rounded-full">
                Default
              </div>
            </div>
          </div>
          
          <div class="mt-2 text-sm">
            <a href="/buyer/profile/addresses?redirect=checkout" class="text-primary hover:underline flex items-center">
              <i class="fas fa-edit mr-1"></i> Manage Addresses
            </a>
          </div>
          
          <!-- Hidden input to store the default address ID -->
          <input type="hidden" id="default-address-id" value="<%= defaultAddress._id %>">
        <% } else { %>
          <!-- No default address found -->
          <div class="bg-yellow-50 border border-yellow-200 rounded-md p-4 mb-6">
            <div class="flex">
              <div class="flex-shrink-0">
                <i class="fas fa-exclamation-circle text-yellow-500"></i>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-yellow-800">No default address found</h3>
                <p class="mt-2 text-sm text-yellow-700">
                  You need to add a delivery address to complete your order. Please add an address before proceeding.
                </p>
                <div class="mt-4">
                  <a href="/buyer/profile/addresses/add?redirect=checkout" class="bg-primary text-dark px-4 py-2 rounded-md hover:bg-opacity-90 inline-block">
                    Add Delivery Address
                  </a>
                </div>
              </div>
            </div>
          </div>
        <% } %>
      </div>
    </div>
    
    <!-- Order Summary -->
    <div class="lg:w-1/3">
      <div class="bg-white rounded-lg shadow-md p-6 sticky top-4">
        <h2 class="text-xl font-semibold mb-4">Order Summary</h2>
        
        <div class="space-y-3 mb-6">
          <div class="flex justify-between">
            <span class="text-gray-600">Subtotal</span>
            <span>₹<%= subtotal %></span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600">Shipping</span>
            <span>₹<%= shipping %></span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600">Tax (18% GST)</span>
            <span>₹<%= tax %></span>
          </div>
          <div class="border-t pt-3 mt-3 flex justify-between font-bold">
            <span>Total</span>
            <span>₹<%= total %></span>
          </div>
        </div>
        
        <form id="payment-form" class="mb-4">
          <div id="payment-element">
            <!-- Stripe Elements will be inserted here -->
          </div>
          <div id="payment-message" class="hidden mt-2 text-center text-sm"></div>
        </form>
        
        <button id="submit-button" class="w-full bg-primary text-dark text-center px-6 py-3 rounded-md hover:bg-opacity-90 transition">
          Pay ₹<%= total %>
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Hidden input to store the selected address ID -->
<input type="hidden" id="selected-address-id">

<!-- Stripe Integration -->
<script src="https://js.stripe.com/v3/"></script>
<script>
  let stripe;
  let elements;
  
  document.addEventListener('DOMContentLoaded', function() {
    const publishableKey = '<%= publishableKey %>';
    const totalAmount = '<%= total %>';
    
    if (!publishableKey) {
      addMessage("No Stripe publishable key available. Please check your configuration.");
      return;
    }
    
    stripe = Stripe(publishableKey);
    
    const submitButton = document.getElementById('submit-button');
    const shippingForm = document.getElementById('shipping-form');
    
    submitButton.addEventListener('click', handleSubmit);
    
    initialize();
    
    async function initialize() {
      const response = await fetch("/buyer/create-payment-intent", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ amount: totalAmount * 100 }) // convert to paise/cents
      });
      
      const { clientSecret } = await response.json();
      
      const options = {
        clientSecret,
        appearance: {
          theme: 'stripe',
          variables: {
            colorPrimary: '#FFE619',
          }
        },
      };
    
      elements = stripe.elements(options);
      const paymentElement = elements.create("payment");
      paymentElement.mount("#payment-element");
    }
    
    async function handleSubmit(e) {
      e.preventDefault();
      
      setLoading(true);
      
      <% if (defaultAddress) { %>
      // Get the default address ID
      const addressId = document.getElementById('default-address-id').value;
      <% } else { %>
      // No default address available
      showMessage("Please add a delivery address first");
      setLoading(false);
      window.location.href = "/buyer/profile/addresses/add?redirect=checkout";
      return;
      <% } %>

      try {
        // Confirm the payment with Stripe
        const { error, paymentIntent } = await stripe.confirmPayment({
          elements,
          confirmParams: {
            // Make the redirect URL absolute to avoid any path issues
            return_url: window.location.origin + "/buyer/payment-completion",
          },
          redirect: "if_required"
        });
        
        if (error) {
          // Show error to customer
          showMessage(error.message || "An error occurred during payment processing");
          setLoading(false);
          return;
        }
        
        if (paymentIntent && paymentIntent.status === 'succeeded') {
          console.log("Payment succeeded, creating order...");
          
          // Make server request to confirm order with the default address
          const response = await fetch('/buyer/confirm-payment', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
              paymentIntent: paymentIntent.id,
              addressId: addressId 
            })
          });
          
          const result = await response.json();
          
          if (result.success) {
            window.location.href = `/buyer/payment-success?order_id=${result.orderId}`;
          } else {
            showMessage(result.message || "Error processing order");
          }
        } else {
          // This should not typically happen as the redirect should have taken place
          showMessage("Payment requires additional steps. Please try again.");
        }
      } catch (err) {
        console.error("Payment error:", err);
        showMessage("An unexpected error occurred. Please try again.");
      }
      
      setLoading(false);
    }
    
    function showMessage(messageText) {
      const messageContainer = document.getElementById("payment-message");
      messageContainer.classList.remove("hidden");
      messageContainer.textContent = messageText;
      
      setTimeout(function() {
        messageContainer.classList.add("hidden");
        messageContainer.textContent = "";
      }, 4000);
    }
    
    function setLoading(isLoading) {
      if (isLoading) {
        submitButton.disabled = true;
        submitButton.textContent = "Processing...";
      } else {
        submitButton.disabled = false;
        submitButton.textContent = `Pay ₹${totalAmount}`;
      }
    }
  });
</script>

<%- include('../partials/footer') %>